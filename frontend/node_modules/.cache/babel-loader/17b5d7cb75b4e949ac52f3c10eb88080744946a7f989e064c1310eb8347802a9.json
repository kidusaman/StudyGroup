{"ast":null,"code":"var _jsxFileName = \"/Users/kidusamanuel/Desktop/school project/frontend/src/GroupChat.js\",\n  _s = $RefreshSig$();\n// GroupChat.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { groupMessagesByDate } from './utils/groupMessagesByDate'; // import our grouping function\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupChat({\n  user,\n  token,\n  socket\n}) {\n  _s();\n  const {\n    groupId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    // Join group\n    socket.emit(\"joinGroup\", groupId);\n\n    // Fetch existing messages\n    axios.get(`http://localhost:5001/api/group-chat/${groupId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setMessages(res.data)).catch(err => console.error(\"Error fetching group messages:\", err));\n\n    // Listen for incoming group messages\n    const handleGroupMessage = messageData => {\n      if (parseInt(messageData.group_id) === parseInt(groupId)) {\n        setMessages(prev => [...prev, messageData]);\n      }\n    };\n    socket.on(\"receiveGroupMessage\", handleGroupMessage);\n\n    // Cleanup\n    return () => {\n      socket.off(\"receiveGroupMessage\", handleGroupMessage);\n    };\n  }, [groupId, token, socket]);\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n    const payload = {\n      groupId: parseInt(groupId),\n      userId: user.id,\n      message: newMessage.trim()\n    };\n    socket.emit(\"sendGroupMessage\", payload);\n    // Optimistic UI\n    setMessages(prev => [...prev, {\n      group_id: groupId,\n      user_id: user.id,\n      message: newMessage.trim(),\n      created_at: new Date().toISOString(),\n      username: user.username\n    }]);\n    setNewMessage('');\n  };\n\n  // 1) Group messages by date\n  const grouped = groupMessagesByDate(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Group Chat - Group \", groupId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        height: '300px',\n        overflowY: 'scroll',\n        marginBottom: '10px',\n        padding: '10px'\n      },\n      children: grouped.map((group, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            margin: '10px 0',\n            fontWeight: 'bold',\n            color: '#888'\n          },\n          children: group.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), group.messages.map((msg, mIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '10px',\n            padding: '8px',\n            background: msg.user_id === user.id ? '#e0ffe0' : '#f0f0f0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), \": \", msg.message, /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '0.8em',\n              color: '#555'\n            },\n            children: format(new Date(msg.created_at), 'hh:mm a')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, mIdx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        style: {\n          width: '80%',\n          padding: '8px'\n        },\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        style: {\n          padding: '8px 16px',\n          marginLeft: '10px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(GroupChat, \"gYDjSDIFU5Jjspr0XiQwxk7m41k=\", false, function () {\n  return [useParams];\n});\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","groupMessagesByDate","format","jsxDEV","_jsxDEV","GroupChat","user","token","socket","_s","groupId","messages","setMessages","newMessage","setNewMessage","emit","get","headers","Authorization","then","res","data","catch","err","console","error","handleGroupMessage","messageData","parseInt","group_id","prev","on","off","handleSendMessage","trim","payload","userId","id","message","user_id","created_at","Date","toISOString","username","grouped","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","marginBottom","padding","map","group","idx","textAlign","fontWeight","color","date","msg","mIdx","background","fontSize","type","value","onChange","e","target","width","placeholder","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/Users/kidusamanuel/Desktop/school project/frontend/src/GroupChat.js"],"sourcesContent":["// GroupChat.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { groupMessagesByDate } from './utils/groupMessagesByDate'; // import our grouping function\nimport { format } from 'date-fns';\n\nfunction GroupChat({ user, token, socket }) {\n  const { groupId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  useEffect(() => {\n    // Join group\n    socket.emit(\"joinGroup\", groupId);\n\n    // Fetch existing messages\n    axios.get(`http://localhost:5001/api/group-chat/${groupId}`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n    .then((res) => setMessages(res.data))\n    .catch((err) => console.error(\"Error fetching group messages:\", err));\n\n    // Listen for incoming group messages\n    const handleGroupMessage = (messageData) => {\n      if (parseInt(messageData.group_id) === parseInt(groupId)) {\n        setMessages((prev) => [...prev, messageData]);\n      }\n    };\n    socket.on(\"receiveGroupMessage\", handleGroupMessage);\n\n    // Cleanup\n    return () => {\n      socket.off(\"receiveGroupMessage\", handleGroupMessage);\n    };\n  }, [groupId, token, socket]);\n\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n    const payload = {\n      groupId: parseInt(groupId),\n      userId: user.id,\n      message: newMessage.trim()\n    };\n    socket.emit(\"sendGroupMessage\", payload);\n    // Optimistic UI\n    setMessages((prev) => [\n      ...prev,\n      {\n        group_id: groupId,\n        user_id: user.id,\n        message: newMessage.trim(),\n        created_at: new Date().toISOString(),\n        username: user.username\n      }\n    ]);\n    setNewMessage('');\n  };\n\n  // 1) Group messages by date\n  const grouped = groupMessagesByDate(messages);\n\n  return (\n    <div style={{ maxWidth: '600px', margin: '0 auto' }}>\n      <h2>Group Chat - Group {groupId}</h2>\n      <div style={{ border: '1px solid #ccc', height: '300px', overflowY: 'scroll', marginBottom: '10px', padding: '10px' }}>\n        {grouped.map((group, idx) => (\n          <div key={idx}>\n            {/* Date heading */}\n            <div style={{ textAlign: 'center', margin: '10px 0', fontWeight: 'bold', color: '#888' }}>\n              {group.date}\n            </div>\n            {/* Messages for this date */}\n            {group.messages.map((msg, mIdx) => (\n              <div\n                key={mIdx}\n                style={{\n                  margin: '10px',\n                  padding: '8px',\n                  background: msg.user_id === user.id ? '#e0ffe0' : '#f0f0f0'\n                }}\n              >\n                <strong>{msg.username}</strong>: {msg.message}\n                <div style={{ fontSize: '0.8em', color: '#555' }}>\n                  {format(new Date(msg.created_at), 'hh:mm a')}\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      {/* Input to send new message */}\n      <div>\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          style={{ width: '80%', padding: '8px' }}\n          placeholder=\"Type a message\"\n        />\n        <button onClick={handleSendMessage} style={{ padding: '8px 16px', marginLeft: '10px' }}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default GroupChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}