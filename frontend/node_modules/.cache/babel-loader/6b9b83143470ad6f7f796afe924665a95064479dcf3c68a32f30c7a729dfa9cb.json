{"ast":null,"code":"var _jsxFileName = \"/Users/kidusamanuel/Desktop/school project/frontend/src/GroupChat.js\",\n  _s = $RefreshSig$();\n// src/GroupChat.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupChat({\n  user,\n  token,\n  socket\n}) {\n  _s();\n  const {\n    groupId\n  } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const listenerRegistered = useRef(false);\n  useEffect(() => {\n    console.log(\"GroupChat mounted, groupId =\", groupId);\n    socket.emit(\"joinGroup\", groupId);\n    console.log(`Joined group-${groupId}`);\n    axios.get(`http://localhost:5001/api/group-chat/${groupId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setMessages(res.data)).catch(err => console.error(\"Error fetching group messages:\", err));\n    const handleGroupMessage = messageData => {\n      console.log(\"New group message received:\", messageData);\n      if (parseInt(messageData.group_id) === parseInt(groupId)) {\n        setMessages(prev => [...prev, messageData]);\n      }\n    };\n\n    // Register the listener (and clean up on unmount)\n    socket.off(\"receiveGroupMessage\", handleGroupMessage);\n    if (!listenerRegistered.current) {\n      socket.on(\"receiveGroupMessage\", handleGroupMessage);\n      listenerRegistered.current = true;\n      console.log(\"Listener registered. Count:\", socket.listeners(\"receiveGroupMessage\").length);\n    }\n    return () => {\n      console.log(\"Cleaning up listener for groupId =\", groupId);\n      socket.off(\"receiveGroupMessage\", handleGroupMessage);\n      listenerRegistered.current = false;\n    };\n  }, [groupId, token, socket]);\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n    const payload = {\n      groupId: parseInt(groupId),\n      userId: user.id,\n      message: newMessage.trim()\n    };\n    socket.emit(\"sendGroupMessage\", payload);\n\n    // Remove the local update to avoid seeing it twice\n    // setMessages((prev) => [\n    //   ...prev,\n    //   {\n    //     group_id: groupId,\n    //     user_id: user.id,\n    //     message: newMessage.trim(),\n    //     created_at: new Date().toISOString(),\n    //     username: user.username\n    //   }\n    // ]);\n\n    setNewMessage('');\n  };\n  // Function to initiate a private chat when clicking on another user's name\n  const initiatePrivateChat = otherUserId => {\n    if (otherUserId !== user.id) {\n      // Navigate to the private chat page and pass the recipient's ID as a query parameter\n      navigate(`/chat?recipient=${otherUserId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Group Chat - Group \", groupId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        height: '300px',\n        overflowY: 'scroll',\n        marginBottom: '10px'\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px',\n          padding: '8px',\n          background: msg.user_id === user.id ? '#e0ffe0' : '#f0f0f0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.user_id !== user.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => initiatePrivateChat(msg.user_id),\n            style: {\n              cursor: 'pointer',\n              color: 'blue'\n            },\n            children: msg.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this) : msg.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), \": \", msg.message, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '0.8em',\n            color: '#555'\n          },\n          children: new Date(msg.created_at).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message\",\n        style: {\n          width: '80%',\n          padding: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        style: {\n          padding: '8px 16px',\n          marginLeft: '10px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(GroupChat, \"SLnxW/iUpkeLSFaleL5dVSOWOlM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","useNavigate","axios","jsxDEV","_jsxDEV","GroupChat","user","token","socket","_s","groupId","navigate","messages","setMessages","newMessage","setNewMessage","listenerRegistered","console","log","emit","get","headers","Authorization","then","res","data","catch","err","error","handleGroupMessage","messageData","parseInt","group_id","prev","off","current","on","listeners","length","handleSendMessage","trim","payload","userId","id","message","initiatePrivateChat","otherUserId","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","marginBottom","map","msg","idx","padding","background","user_id","onClick","cursor","color","username","fontSize","Date","created_at","toLocaleTimeString","type","value","onChange","e","target","placeholder","width","marginLeft","_c","$RefreshReg$"],"sources":["/Users/kidusamanuel/Desktop/school project/frontend/src/GroupChat.js"],"sourcesContent":["// src/GroupChat.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction GroupChat({ user, token, socket }) {\n  const { groupId } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const listenerRegistered = useRef(false);\n\n  useEffect(() => {\n    console.log(\"GroupChat mounted, groupId =\", groupId);\n    socket.emit(\"joinGroup\", groupId);\n    console.log(`Joined group-${groupId}`);\n\n    axios.get(`http://localhost:5001/api/group-chat/${groupId}`, {\n      headers: { Authorization: `Bearer ${token}` }\n    })\n      .then((res) => setMessages(res.data))\n      .catch((err) => console.error(\"Error fetching group messages:\", err));\n\n    const handleGroupMessage = (messageData) => {\n      console.log(\"New group message received:\", messageData);\n      if (parseInt(messageData.group_id) === parseInt(groupId)) {\n        setMessages((prev) => [...prev, messageData]);\n      }\n    };\n\n    // Register the listener (and clean up on unmount)\n    socket.off(\"receiveGroupMessage\", handleGroupMessage);\n    if (!listenerRegistered.current) {\n      socket.on(\"receiveGroupMessage\", handleGroupMessage);\n      listenerRegistered.current = true;\n      console.log(\"Listener registered. Count:\", socket.listeners(\"receiveGroupMessage\").length);\n    }\n\n    return () => {\n      console.log(\"Cleaning up listener for groupId =\", groupId);\n      socket.off(\"receiveGroupMessage\", handleGroupMessage);\n      listenerRegistered.current = false;\n    };\n  }, [groupId, token, socket]);\n\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n  \n    const payload = {\n      groupId: parseInt(groupId),\n      userId: user.id,\n      message: newMessage.trim()\n    };\n  \n    socket.emit(\"sendGroupMessage\", payload);\n  \n    // Remove the local update to avoid seeing it twice\n    // setMessages((prev) => [\n    //   ...prev,\n    //   {\n    //     group_id: groupId,\n    //     user_id: user.id,\n    //     message: newMessage.trim(),\n    //     created_at: new Date().toISOString(),\n    //     username: user.username\n    //   }\n    // ]);\n  \n    setNewMessage('');\n  };\n  // Function to initiate a private chat when clicking on another user's name\n  const initiatePrivateChat = (otherUserId) => {\n    if (otherUserId !== user.id) {\n      // Navigate to the private chat page and pass the recipient's ID as a query parameter\n      navigate(`/chat?recipient=${otherUserId}`);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: '600px', margin: '0 auto' }}>\n      <h2>Group Chat - Group {groupId}</h2>\n      <div style={{ border: '1px solid #ccc', height: '300px', overflowY: 'scroll', marginBottom: '10px' }}>\n        {messages.map((msg, idx) => (\n          <div \n            key={idx} \n            style={{ \n              margin: '10px', \n              padding: '8px', \n              background: msg.user_id === user.id ? '#e0ffe0' : '#f0f0f0' \n            }}\n          >\n            <strong>\n              {msg.user_id !== user.id ? (\n                <span \n                  onClick={() => initiatePrivateChat(msg.user_id)}\n                  style={{ cursor: 'pointer', color: 'blue' }}\n                >\n                  {msg.username}\n                </span>\n              ) : (\n                msg.username\n              )}\n            </strong>: {msg.message}\n            <div style={{ fontSize: '0.8em', color: '#555' }}>\n              {new Date(msg.created_at).toLocaleTimeString()}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div>\n        <input \n          type=\"text\" \n          value={newMessage} \n          onChange={(e) => setNewMessage(e.target.value)} \n          placeholder=\"Type a message\" \n          style={{ width: '80%', padding: '8px' }}\n        />\n        <button onClick={handleSendMessage} style={{ padding: '8px 16px', marginLeft: '10px' }}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default GroupChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}