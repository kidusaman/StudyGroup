{"ast":null,"code":"// utils/groupMessagesByDate.js\nimport { format, isToday, parseISO } from 'date-fns';\n\n/**\n * groupMessagesByDate\n * @param {Array} messages - an array of message objects\n *  e.g. [{ message: \"...\", created_at: \"...\", ...}, ...]\n * @returns {Array} array of groups\n *   e.g. [\n *     {\n *       date: \"Today\", // or \"Mar 2, 2025\"\n *       messages: [ ...messages for that date... ]\n *     },\n *     {\n *       date: \"Mar 1, 2025\",\n *       messages: [ ... ]\n *     }\n *   ]\n */\nexport function groupMessagesByDate(messages) {\n  // 1) Sort messages by created_at ascending (optional)\n  const sorted = [...messages].sort((a, b) => {\n    return new Date(a.created_at) - new Date(b.created_at);\n  });\n\n  // 2) Build groups\n  const groups = [];\n  let currentDate = null;\n  let currentGroup = null;\n  sorted.forEach(msg => {\n    // parseISO if your created_at is an ISO string\n    const dateObj = parseISO(msg.created_at);\n    // Or if your date is already a JS Date, skip parseISO.\n\n    // Format date as \"MMM d, yyyy\" or use your preference\n    let dateLabel = format(dateObj, 'MMM d, yyyy');\n    // If you'd like to show \"Today\" for the current date:\n    if (isToday(dateObj)) {\n      dateLabel = 'Today';\n    }\n    if (dateLabel !== currentDate) {\n      // We hit a new date group\n      currentDate = dateLabel;\n      currentGroup = {\n        date: dateLabel,\n        messages: []\n      };\n      groups.push(currentGroup);\n    }\n    currentGroup.messages.push(msg);\n  });\n  return groups;\n}","map":{"version":3,"names":["format","isToday","parseISO","groupMessagesByDate","messages","sorted","sort","a","b","Date","created_at","groups","currentDate","currentGroup","forEach","msg","dateObj","dateLabel","date","push"],"sources":["/Users/kidusamanuel/Desktop/school project/frontend/src/utils/groupMessagesByDate.js"],"sourcesContent":["// utils/groupMessagesByDate.js\nimport { format, isToday, parseISO } from 'date-fns';\n\n/**\n * groupMessagesByDate\n * @param {Array} messages - an array of message objects\n *  e.g. [{ message: \"...\", created_at: \"...\", ...}, ...]\n * @returns {Array} array of groups\n *   e.g. [\n *     {\n *       date: \"Today\", // or \"Mar 2, 2025\"\n *       messages: [ ...messages for that date... ]\n *     },\n *     {\n *       date: \"Mar 1, 2025\",\n *       messages: [ ... ]\n *     }\n *   ]\n */\nexport function groupMessagesByDate(messages) {\n  // 1) Sort messages by created_at ascending (optional)\n  const sorted = [...messages].sort((a, b) => {\n    return new Date(a.created_at) - new Date(b.created_at);\n  });\n\n  // 2) Build groups\n  const groups = [];\n  let currentDate = null;\n  let currentGroup = null;\n\n  sorted.forEach((msg) => {\n    // parseISO if your created_at is an ISO string\n    const dateObj = parseISO(msg.created_at);\n    // Or if your date is already a JS Date, skip parseISO.\n\n    // Format date as \"MMM d, yyyy\" or use your preference\n    let dateLabel = format(dateObj, 'MMM d, yyyy');\n    // If you'd like to show \"Today\" for the current date:\n    if (isToday(dateObj)) {\n      dateLabel = 'Today';\n    }\n\n    if (dateLabel !== currentDate) {\n      // We hit a new date group\n      currentDate = dateLabel;\n      currentGroup = {\n        date: dateLabel,\n        messages: []\n      };\n      groups.push(currentGroup);\n    }\n    currentGroup.messages.push(msg);\n  });\n\n  return groups;\n}\n"],"mappings":"AAAA;AACA,SAASA,MAAM,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,UAAU;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,QAAQ,EAAE;EAC5C;EACA,MAAMC,MAAM,GAAG,CAAC,GAAGD,QAAQ,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC1C,OAAO,IAAIC,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC;EACxD,CAAC,CAAC;;EAEF;EACA,MAAMC,MAAM,GAAG,EAAE;EACjB,IAAIC,WAAW,GAAG,IAAI;EACtB,IAAIC,YAAY,GAAG,IAAI;EAEvBR,MAAM,CAACS,OAAO,CAAEC,GAAG,IAAK;IACtB;IACA,MAAMC,OAAO,GAAGd,QAAQ,CAACa,GAAG,CAACL,UAAU,CAAC;IACxC;;IAEA;IACA,IAAIO,SAAS,GAAGjB,MAAM,CAACgB,OAAO,EAAE,aAAa,CAAC;IAC9C;IACA,IAAIf,OAAO,CAACe,OAAO,CAAC,EAAE;MACpBC,SAAS,GAAG,OAAO;IACrB;IAEA,IAAIA,SAAS,KAAKL,WAAW,EAAE;MAC7B;MACAA,WAAW,GAAGK,SAAS;MACvBJ,YAAY,GAAG;QACbK,IAAI,EAAED,SAAS;QACfb,QAAQ,EAAE;MACZ,CAAC;MACDO,MAAM,CAACQ,IAAI,CAACN,YAAY,CAAC;IAC3B;IACAA,YAAY,CAACT,QAAQ,CAACe,IAAI,CAACJ,GAAG,CAAC;EACjC,CAAC,CAAC;EAEF,OAAOJ,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}